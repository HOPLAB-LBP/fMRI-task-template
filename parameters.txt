%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Parameters for a MATLAB script
% This file contains the parameters to be used in another matlab script.
% It will be parsed according to these rules:
% - all lines beginning with '%' will be ignored, use them to comment
% - all empty lines will be ignored
% - all other lines will be read as matlab code
% 
% Enter your parameters in this format: "name = value".
%
% Avoid using quotation marks for strings as they will be read as strings regardless (avoid double-quotation marks).
%
% Write whatever you want in this file. As long as it is preceded by a '%' sign at the beginning of the line, it won't be read by MatLab.
% Write all your parameters in uncommented lines, and they will be read as code.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% STIMULUS TIMING

% Stimulus duration - how long each stimulus is shown, in seconds
stimDur = 2.5

% Fixation duration - how long the fixation cross appears for, in seconds. This corresponds to the ISI and to the response window.
fixDur = 1

% Pre- and post-trial interval duration, in seconds.
prePost = 10

% Trial duration: calculated as the sum of the stimulus presentation and fixation cross presentation times.
trialDur = p.stimDur + p.fixDur


%% STIMULUS SIZE

% In this section, decide on whether your stimuli should be resized or not. If they already have the desired size, set the 'resize' parameter to 'false'. If your stimuli need resizing, then set it to 'true' and choose your resizing method.

resize = true

% If you set 'resize' to 'true', choose a resize mode below by declaring the variable 'resizeMode'.
% The possible resizing modes are: visualUnits, pixelSize. 
% Give your output size by specifying the 'outWidth' and/or 'outHeight' parameters. Giving only one of them will adaptively resize the other proportionately.
% For each mode, give two values: one for the width, one for the height of the resized image.
%  - visualUnits: convert your stimulus size from visual degrees to pixels. Give your input in degrees of visual angle.
%  - pixelSize: resize your image to the desired pixel size. Give your input in pixels.

% resizeMode = pixelSize
resizeMode = visualUnits


outWidth = 8
outHeight = 8


%% STIMULUS LOCATION & DESIGN LIST

% Give your stimulus folder directory, along with any wildcard selection you would need.
% Giving a wild card could help not selecting unwanted (invisible) files (e.g. DS_store, ., .., etc.).

stimDir = ./src/stimuli/*.jpg

% Give inputs to determine the number, repetitions, randomisation, etc. of your stimuli
% Start by declaring how many runs you have

numRuns = 8

% Then, declare whether you have a stimulus list already made, or not. If you do, give its path as input here below in the 'stimListFile' parameter. If you don't, comment the line out.

stimListFile = /Users/tim/Desktop/list_of_trials.txt

% If you don't have a stimulus list prepared, the following parameters need to be adjusted. Start by declaring the number of trials you have per run.

trialsPerRun = 20

% The total number of trials will be calculated as numRuns * trialsPerRun. A stimulus list will then be created by randomising the stimulus files and sharing them evenly across runs.
% Repetitions: if your total number of trials is higher than your number of input stimulus files, the latter will be multiplied to fill in the total number of trials. Make sure your total number of trials is a multiple of your total number of files (e.g. 8 runs of 20 trials = 160 trials in total, should correspond to 80/40/20/10/â€¦ number of input images).



% Define parameters for the stimuli and experimental conditions
numStim = 40; % Total number of stimuli
% Number of stimuli per condition. Adjust these as per your stimuli set
numStimC1 = 3; p.numStimC2 = 4; p.numStimC3 = 7; p.numStimC4 = 3; p.numStimC5 = 3;
stimCat = {'C1','C2','C3','C4','C5','NC1','NC2','NC3','NC4','NC5'}; % Categories of stimuli
numCon = 10; % Number of conditions
numTrials = p.numStim * 2; % Total number of trials (each stimulus presented twice)


%% FIXATION CROSS

% Fixation cross size
fixSize = [.6 .5 .1];
% Fixation cross color: each triplet corresponds to one element of the cross
fixCol = [0 0 0;  255 255 255; 0 0 0]';